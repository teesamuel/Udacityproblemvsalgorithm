
Tie complexity is O(n*m) where m is the number of suffixes to be generated
The sapace complexity is O(n)

Insertion is done in O(1) time and space complexity
The implementation used a recursive approach in to go through to check if the word is present
The find method  space complexity is O(1) while its time complexity is O(n). 
In moves through the node until it finds the word

The trie ended up becoming a dictionary of dictionary (the children having a node that has children dictionary).
Each node stored the character, and dictionary of children  
and a flag representing the last value in a word

     Node(character,children={},is_last)
            /   \